x-airflow-common: &airflow-common
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.7.1}
    environment: &airflow-common-env
        AIRFLOW__CORE__EXECUTOR: CeleryExecutor
        AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
        AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
        AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
        AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
        AIRFLOW__CORE__FERNET_KEY: ""
        AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
        AIRFLOW__CORE__LOAD_EXAMPLES: "false"
        AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session"
        AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: "true"
        _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
    volumes:
        - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
        - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
        - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
        - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
        - ${AIRFLOW_PROJ_DIR:-.}/shared:/tmp/shared
    user: "${AIRFLOW_UID:-50000}:0"
    depends_on: &airflow-common-depends-on
        postgres:
            condition: service_healthy
    env_file:
        - .env

services:
    postgres:
        image: postgres:13
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "airflow"]
            interval: 10s
            retries: 5
            start_period: 5s
        restart: always

    media-db:
        image: postgres:13
        environment:
            POSTGRES_USER: media
            POSTGRES_PASSWORD: media
            POSTGRES_DB: media
        volumes:
            - media-db-volume:/var/lib/postgresql/data
            - ${AIRFLOW_PROJ_DIR:-.}/schema.sql:/docker-entrypoint-initdb.d/schema.sql
        ports:
            - "15432:5432"
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "media"]
            interval: 10s
            retries: 5
            start_period: 5s
        restart: always

    redis:
        image: redis:latest
        ports:
            - "6379:6379"
        restart: always

    airflow-webserver:
        <<: *airflow-common
        command: webserver
        ports:
            - "8080:8080"
        restart: always
        depends_on:
            <<: *airflow-common-depends-on
            airflow-init:
                condition: service_completed_successfully

    airflow-scheduler:
        <<: *airflow-common
        command: scheduler
        restart: always
        depends_on:
            <<: *airflow-common-depends-on
            airflow-init:
                condition: service_completed_successfully

    airflow-worker:
        <<: *airflow-common
        command: celery worker
        restart: always
        depends_on:
            <<: *airflow-common-depends-on
            airflow-init:
                condition: service_completed_successfully

    airflow-triggerer:
        <<: *airflow-common
        command: triggerer
        restart: always
        depends_on:
            <<: *airflow-common-depends-on
            airflow-init:
                condition: service_completed_successfully

    airflow-init:
        <<: *airflow-common
        entrypoint: /bin/bash
        command:
            - -c
            - |
                mkdir -p /sources/logs /sources/dags /sources/plugins
                chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
                exec /entrypoint airflow version
        environment:
            <<: *airflow-common-env
            _AIRFLOW_DB_MIGRATE: "true"
            _AIRFLOW_WWW_USER_CREATE: "true"
            _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
            _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
        user: "0:0"
        volumes:
            - ${AIRFLOW_PROJ_DIR:-.}:/sources

    airflow-cli:
        <<: *airflow-common
        profiles:
            - debug
        command:
            - bash
            - -c
            - airflow

    flower:
        <<: *airflow-common
        command: celery flower
        profiles:
            - flower
        ports:
            - "5555:5555"
        restart: always
        depends_on:
            <<: *airflow-common-depends-on
            airflow-init:
                condition: service_completed_successfully

volumes:
    postgres-db-volume:
    media-db-volume:
